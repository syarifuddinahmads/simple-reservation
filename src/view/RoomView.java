/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.RoomController;
import java.awt.event.ItemEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Room;
import model.RoomRate;
import model.RoomType;

/**
 *
 * @author syarifuddin
 */
public class RoomView extends javax.swing.JFrame {

    /**
     * Creates new form RoomView
     */
    private RoomController roomController;
    private int idRoom = 0;
    private int roomType = 0;
    private int roomRate = 0;
    private int roomNumber = 0;

    public RoomView() throws SQLException {
        initComponents();
        setLocationRelativeTo(null);
        this.roomController = new RoomController();
        this.getDataRoom();
        this.getDataRoomRate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnRoomType = new javax.swing.JButton();
        btnrRoomRate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbRoomRate = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cbRoomType = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        tfRoomNumber = new javax.swing.JTextField();
        btnSimpan = new javax.swing.JButton();
        bnCancel = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoom = new javax.swing.JTable();
        btnClose = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jLabel2.setText("ROOM");

        btnRoomType.setText("Room Type");
        btnRoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRoomTypeActionPerformed(evt);
            }
        });

        btnrRoomRate.setText("Room Rate");
        btnrRoomRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrRoomRateActionPerformed(evt);
            }
        });

        jLabel1.setText("Rate");

        jLabel3.setText("Type");

        jLabel4.setText("Room Number");

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        bnCancel.setText("Cancel");
        bnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnCancelActionPerformed(evt);
            }
        });

        tblRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRoom);

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnrRoomRate)
                        .addGap(18, 18, 18)
                        .addComponent(btnRoomType))
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(cbRoomRate, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bnCancel)
                        .addGap(18, 18, 18)
                        .addComponent(btnSimpan))
                    .addComponent(jSeparator2)
                    .addComponent(jScrollPane1))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnRoomType)
                    .addComponent(btnrRoomRate))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbRoomRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfRoomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bnCancel)
                    .addComponent(btnSimpan))
                .addGap(31, 31, 31)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClose)
                    .addComponent(btnDelete)
                    .addComponent(btnEdit))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnrRoomRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrRoomRateActionPerformed
        new RoomRateView().show();
    }//GEN-LAST:event_btnrRoomRateActionPerformed

    private void btnRoomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRoomTypeActionPerformed
        new RoomTypeView().show();
    }//GEN-LAST:event_btnRoomTypeActionPerformed

    private void bnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnCancelActionPerformed
        tfRoomNumber.setText("");
        cbRoomRate.setSelectedIndex(0);
        cbRoomType.setSelectedIndex(0);
    }//GEN-LAST:event_bnCancelActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        String item = cbRoomRate.getSelectedItem().toString();
        int idType = Integer.parseInt(item.substring(0, item.indexOf(" -")));
        roomNumber = Integer.parseInt(tfRoomNumber.getText());
        roomType = idType;

        if (roomType < 0) {
            JOptionPane.showMessageDialog(null, "Room Type belum dipilih, Pilih Room Type terlebih dahulu !");
        } else if (roomNumber < 0) {
            JOptionPane.showMessageDialog(null, "Room Number belum dimasukkan, Masukkan Room Number terlebih dahulu !");
        } else {
            try {
                Room room = new Room();
                room.setIdRoom(idRoom);
                room.setRoomNumber(roomNumber);
                room.setRoomType(roomType);
                this.roomController.insertDataRoom(room);

                this.getDataRoom();

                tfRoomNumber.setText("");
                cbRoomRate.setSelectedIndex(0);
                cbRoomType.removeAllItems();

            } catch (SQLException ex) {
                Logger.getLogger(RoomView.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int col = 0;
        int row = tblRoom.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Room belum dipilih, Pilih Room terlebih dahulu !");
        } else {

            try {
                String id = tblRoom.getModel().getValueAt(row, col).toString();
                System.out.println("ID = " + id);
                this.roomController.deleteRoom(Integer.parseInt(id));
                this.getDataRoom();
            } catch (SQLException ex) {
                Logger.getLogger(CustomerView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        int col = 0;
        int row = tblRoom.getSelectedRow();
        System.out.println("ROW = " + row);
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Room belum dipilih, Pilih Room terlebih dahulu !");
        } else {
            String id = tblRoom.getModel().getValueAt(row, col).toString();
            System.out.println("ID = " + id);
            try {
                Room room = new Room();
                room.setIdRoom(Integer.parseInt(id));
                Room r = this.roomController.getDataRoom(room).get(0);

                idRoom= r.getIdRoom();
                tfRoomNumber.setText(String.valueOf(r.getRoomNumber()));
                cbRoomRate.getModel().setSelectedItem(r.getRoomtype().getRoomrate().getIdRoomRate()+" - "+r.getRoomtype().getRoomrate().getNameRoomRate());
                cbRoomType.getModel().setSelectedItem(r.getRoomtype().getIdRoomType()+" - "+r.getRoomtype().getNameRoomType());

                btnSimpan.setText("Update");
            } catch (SQLException ex) {
                Logger.getLogger(UserView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void getDataRoom() throws SQLException {
        DefaultTableModel dtmRoom = new DefaultTableModel(new String[]{"ID", "Room Number", "Type ", "Rate", "Price"}, 0);
        dtmRoom.setRowCount(0);
        for (Room r : this.roomController.getDataRoom(null)) {
            dtmRoom.addRow(new String[]{String.valueOf(r.getIdRoom()), String.valueOf(r.getRoomNumber()), r.getRoomtype().getNameRoomType(), r.getRoomtype().getRoomrate().getNameRoomRate(), String.valueOf(r.getRoomtype().getRoomrate().getPriceRoomRate())});
        }
        tblRoom.setModel(dtmRoom);
    }

    private void getDataRoomRate() throws SQLException {
        DefaultComboBoxModel dcbrr = new DefaultComboBoxModel();
        dcbrr.addElement("0 - Pilih Room Rate ");
        for (RoomRate rr : this.roomController.getDataRoomRate(null)) {
            dcbrr.addElement(rr.getIdRoomRate() + " - " + rr.getNameRoomRate());
        }
        this.cbRoomRate.removeAllItems();
        this.cbRoomRate.setModel(dcbrr);

        this.cbRoomRate.addItemListener((ItemEvent e) -> {
            String item = cbRoomRate.getSelectedItem().toString();
            int id = Integer.parseInt(item.substring(0, item.indexOf(" -")));
            if (id > 0) {
                roomRate = id;
                try {
                    DefaultComboBoxModel dcbrt = new DefaultComboBoxModel();
                    dcbrt.addElement("0 - Pilih Room Type ");
                    for (RoomType rt : this.roomController.getDataRoomTypeByRate(roomRate)) {
                        dcbrt.addElement(rt.getIdRoomType() + " - " + rt.getNameRoomType());
                    }
                    this.cbRoomType.removeAllItems();
                    this.cbRoomType.setModel(dcbrt);
                } catch (SQLException ex) {
                    Logger.getLogger(RoomView.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                roomRate = 0;
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new RoomView().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(RoomView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bnCancel;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnRoomType;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnrRoomRate;
    private javax.swing.JComboBox<String> cbRoomRate;
    private javax.swing.JComboBox<String> cbRoomType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tblRoom;
    private javax.swing.JTextField tfRoomNumber;
    // End of variables declaration//GEN-END:variables
}
